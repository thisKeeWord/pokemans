{"version":3,"sources":["components/Pokemon.tsx","components/Pokegen.tsx","components/Pokedex.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pokemon","useState","pokemon","setPokemon","error","setError","loading","setLoading","params","useParams","useEffect","a","axios","get","name","results","data","message","getPokemon","className","charAt","toUpperCase","slice","to","src","sprites","front_default","alt","Object","keys","map","key","index","includes","Array","isArray","id","replace","elem","idx","move","length","ability","stat","base_stat","type","toString","Pokegen","pokemonByGen","genStack","Pokedex","list","setList","gensData","Promise","all","url","resultData","sortedData","pokemon_species","sort","b","Error","fetchResults","fetchData","element","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87e4f14f.chunk.js","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\nconst Pokemon: FunctionComponent = () => {\n  // eslint-disable-next-line semi\n  const [pokemon, setPokemon] = useState<Record<any, any>>({})\n  const [error, setError] = useState<string>('')\n  const [loading, setLoading] = useState<boolean>(false)\n  const params = useParams() as Record<any, any>\n\n  useEffect(() => {\n    setLoading(true)\n    error && setError('')\n    const getPokemon = async () => {\n      try {\n        const results = await axios.get(`https://pokeapi.co/api/v2/pokemon/${params.name}`)\n        setPokemon(results.data)\n      } catch (err) {\n        setError(`Could not retrieve information about ${params.name}. ${err.message}`)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getPokemon()\n  }, [])\n\n  if (loading) {\n    return <div className=\"spinner\" />\n  }\n\n  return (\n    <div>\n      <div className=\"onTop\">\n        <h2>\n          Name:\n          {' '}\n          {params.name.charAt(0).toUpperCase() + params.name.slice(1)}\n        </h2>\n        <Link to=\"/\">\n          <div className=\"goBack\" />\n        </Link>\n      </div>\n      <h3>\n        Sprite:\n        {' '}\n        <img src={pokemon.sprites?.front_default} alt={pokemon.sprites?.front_default} />\n      </h3>\n      {error && <div>{error}</div>}\n      <div className=\"pokemon-content\">\n        {Object.keys(pokemon).map((key, index) => {\n          // eslint-disable-next-line max-len\n          if (!!pokemon[key] && (['forms', 'abilities', 'stats', 'weight', 'moves', 'height', 'id', 'order', 'base_experience', 'types'].includes(key))) {\n            if (Array.isArray(pokemon[key])) {\n              return (\n                <div className=\"descriptor\" key={index}>\n                  <span className=\"key\" id=\"information\" key={key + index}>{key.replace(/-/g, ' ')}</span>\n                  <div className=\"key\">\n                    {pokemon[key].map((elem, idx) => {\n                      if (elem.move) {\n                        if (idx === pokemon[key].length - 1) {\n                          return <span className=\"key\">{elem.move.name.replace(/-/g, ' ')}</span>\n                        }\n\n                        return (\n                          <span className=\"trait\">\n                            {elem.move.name.replace(/-/g, ' ')}\n                            ,\n                            {' '}\n                          </span>\n                        )\n                      }\n                      if (elem.name) {\n                        if (idx === pokemon[key].length - 1) {\n                          return <span className=\"key\">{elem.name}</span>\n                        }\n\n                        return (\n                          <span className=\"trait\">\n                            {elem.name}\n                            ,\n                            {' '}\n                          </span>\n                        )\n                      }\n                      if (elem.ability) {\n                        if (idx === pokemon[key].length - 1) {\n                          return <span className=\"key\">{elem.ability.name}</span>\n                        }\n\n                        return (\n                          <span className=\"trait\">\n                            {elem.ability.name}\n                            ,\n                            {' '}\n                          </span>\n                        )\n                      }\n                      if (elem.stat) {\n                        if (idx === pokemon[key].length - 1) {\n                          return (\n                            <span className=\"trait\">\n                              {elem.stat.name}\n                              :\n                              {' '}\n                              {elem.base_stat}\n                            </span>\n                          )\n                        }\n\n                        return (\n                          <span className=\"trait\">\n                            {elem.stat.name}\n                            :\n                            {' '}\n                            {elem.base_stat}\n                            <br />\n                          </span>\n                        )\n                      }\n                      if (elem.type) {\n                        if (idx === pokemon[key].length - 1) {\n                          return <span className=\"trait\">{elem.type.name.replace(/-/g, ' ')}</span>\n                        }\n\n                        return (\n                          <span className=\"trait\">\n                            {elem.type.name.replace(/-/g, ' ')}\n                            ,\n                            {' '}\n                          </span>\n                        )\n                      }\n\n                      return null\n                    })}\n                  </div>\n                </div>\n              );\n            }\n\n            return (\n              <div className=\"descriptor\" key={index}>\n                <span className=\"key\" id=\"information\">{key.replace(/_/g, ' ')}</span>\n                <div className=\"key\">{pokemon[key].toString()}</div>\n              </div>\n            );\n          }\n\n          return null\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Pokemon;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface PokegenProps {\n  pokemonByGen: any[]\n}\n\nconst Pokegen: FunctionComponent<PokegenProps> = ({ pokemonByGen }: PokegenProps) => {\n  const genStack = pokemonByGen?.map((pokemon) => (\n    <Link to={`/${pokemon.name}`} key={pokemon.name}>{pokemon.name}</Link>\n  ));\n\n  return (\n    <div className=\"pokesGen\">\n      {genStack}\n    </div>\n  );\n};\n\nexport default Pokegen;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pokegen from './Pokegen';\n\nconst Pokedex: FunctionComponent = () => {\n  const [list, setList] = useState<any[]>()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<string>('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true)\n      error && setError('')\n\n      try {\n        const gensData = await axios.get('https://pokeapi.co/api/v2/generation/?limit=1500')\n        // eslint-disable-next-line no-restricted-syntax\n        const fetchResults = await Promise.all(gensData.data.results.map(async (data, index) => {\n          try {\n            const resultData = await axios.get(data.url)\n            const sortedData = resultData.data.pokemon_species.sort(\n              (a, b) => a.url.replace(/\\D/g, '').slice(1) - b.url.replace(/\\D/g, '').slice(1),\n            );\n\n            return sortedData\n          } catch (err) {\n            throw new Error(`An error occurred fetching the details of gen ${index + 1}`)\n          }\n        }))\n\n        setList(fetchResults)\n      } catch (e) {\n        setError(e.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  if (loading) {\n    return <div className=\"spinner\" />\n  }\n\n  return (\n    <div className=\"pokeList\">\n      {error && <span>{error}</span>}\n      <div className=\"list\">\n        {list?.map((element, index) => (\n          <div className=\"dexByGen\" key={index}>\n            <h1 className=\"generation\">\n              Gen\n              {' '}\n              {index + 1}\n            </h1>\n            <Pokegen pokemonByGen={element} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Pokedex;\n","import React, { FunctionComponent } from 'react';\nimport { Route } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport Pokemon from './components/Pokemon';\nimport Pokedex from './components/Pokedex';\n\nimport './App.css'\n\nconst App: FunctionComponent = () => (\n  <HashRouter>\n    <Route exact path=\"/\" component={Pokedex} />\n    <Route path=\"/:name\" component={Pokemon} />\n  </HashRouter>\n);\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('pokedex'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}