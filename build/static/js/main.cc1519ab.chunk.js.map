{"version":3,"sources":["components/Generations/index.tsx","components/PokemonEntry.tsx","Pokedex.tsx","pages/FourOhFour/index.tsx","pages/About/index.tsx","reportWebVitals.ts","index.tsx"],"names":["DrawerHeader","styled","theme","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","Generations","genList","state","selectedPokemon","useState","openDrawer","setOpenDrawer","generation","setGeneration","pokemonByGeneration","setPokemonByGeneration","history","useHistory","handlePokemonSelection","pokemon","a","push","name","updated","useEffect","length","straightToPokemonList","find","pokemonList","some","includes","region","stateList","Button","onClick","variant","Drawer","anchor","open","onClose","IconButton","Divider","ListItem","button","ListItemText","primary","role","onKeyDown","List","className","map","index","gen","selectRegion","categories","PokemonEntry","pokemonEntry","src","sprites","front_default","alt","Table","Object","keys","key","Array","isArray","cx","TableCell","id","replace","elem","idx","move","ability","stat","base_stat","type","toString","rootUrl","Pokedex","setGenList","loading","setLoading","error","setError","setSelectedPokemon","setPokemonEntry","params","useParams","useLocation","getPokemonData","axios","get","results","data","Error","message","gensData","Promise","all","url","resultData","pokemon_species","main_region","sortedData","sort","b","slice","charAt","toUpperCase","p","catch","e","fetchResults","fetchData","fetchPokemonData","pokemonData","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","component","Link","href","FourOhFour","About","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.cc1519ab.chunk.js","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport Button from '@mui/material/Button'\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport IconButton from '@mui/material/IconButton'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { styled } from '@mui/material/styles'\nimport { GenList, PokemonList } from '../../interfaces'\n\ninterface GenerationsProps {\n  genList: GenList[]\n  state?: Record<any, any>\n  selectedPokemon?: string\n}\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-start',\n}))\n\nconst Generations: FunctionComponent<GenerationsProps> = ({ genList, state, selectedPokemon }: GenerationsProps) => {\n  const [openDrawer, setOpenDrawer] = useState<boolean>(false)\n  const [generation, setGeneration] = useState<string>('')\n  const [pokemonByGeneration, setPokemonByGeneration] = useState<PokemonList[]>([])\n  const history = useHistory()\n\n  const handlePokemonSelection = async (pokemon: Record<any, any>) => {\n    history.push(`/pokemon/${pokemon.name}`, { updated: true, generation })\n    setOpenDrawer(false)\n    setGeneration(generation)\n  }\n\n  const selectRegion = (gen: Record<any, any>) => {\n    setGeneration(gen.region)\n    setPokemonByGeneration(gen.pokemonList)\n  }\n\n  useEffect(() => {\n    // if user entered pokemon directly in url\n    if (!state?.generation && selectedPokemon && genList.length) {\n      const straightToPokemonList = genList.find(({ pokemonList }) => pokemonList.some(({ name }) => name.includes(selectedPokemon)))\n      if (straightToPokemonList) {\n        setGeneration(straightToPokemonList.region)\n        setPokemonByGeneration(straightToPokemonList.pokemonList)\n      }\n    }\n\n    // if user entered pokemon by selecting on sidenav\n    if (state?.generation && genList.length) {\n      const stateList = genList.find(({ region }) => region === state.generation)\n      setGeneration(state.generation)\n      setPokemonByGeneration(stateList?.pokemonList || [])\n    }\n  }, [state?.generation, selectedPokemon, genList])\n\n  return (\n    <>\n      <Button onClick={() => setOpenDrawer(true)} variant=\"contained\" data-testid=\"view-pokemon\">View Pokemon</Button>\n      <Drawer\n        anchor=\"right\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <DrawerHeader>\n          <IconButton onClick={() => setOpenDrawer(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        {generation ? (\n          <>\n            <ListItem button onClick={() => setGeneration('')}>\n              <ListItemText primary=\"Back to region list\" />\n              <ChevronRightIcon />\n            </ListItem>\n            <div role=\"presentation\" onKeyDown={() => setOpenDrawer(false)}>\n              <List className=\"drawer-list\">\n                {pokemonByGeneration?.map((pokemon: Record<any, any>, index: number) => (\n                  <ListItem button key={index} onClick={() => handlePokemonSelection(pokemon)} data-testid=\"gen-pokemon-item\">\n                    <ChevronLeftIcon />\n                    <ListItemText key={index} primary={pokemon.name} className=\"drawer-item\" />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          </>\n        ) : (\n          <div role=\"presentation\" onKeyDown={() => setOpenDrawer(false)}>\n            <List className=\"drawer-list\">\n              {genList?.map((gen: Record<any, any>, index: number) => (\n                <ListItem button key={index} onClick={() => selectRegion(gen)} data-testid=\"gen-region-item\">\n                  <ChevronLeftIcon />\n                  <ListItemText key={index} primary={gen.region} className=\"drawer-item\" />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        )}\n      </Drawer>\n    </>\n  )\n}\n\nexport default Generations\n","import React, { FunctionComponent } from 'react'\nimport cx from 'classnames'\nimport Table from '@mui/material/Table'\nimport TableCell from '@mui/material/TableCell'\n\nconst categories = ['forms', 'abilities', 'stats', 'weight', 'moves', 'height', 'id', 'order', 'base_experience', 'types']\ninterface PokemonEntryProps {\n  pokemonEntry: Record<any, any>\n}\n\nconst PokemonEntry: FunctionComponent<PokemonEntryProps> = ({ pokemonEntry }: PokemonEntryProps) => {\n  if (!pokemonEntry.name) {\n    return (\n      <div>\n        <p>No Pokémon selected.</p>\n        <span>Click on the menu to begin the search.</span>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"onTop\">\n        <h2>\n          Name:\n          {' '}\n          {pokemonEntry.name}\n        </h2>\n      </div>\n      <h3>\n        Sprite:\n        {' '}\n        <img src={pokemonEntry.sprites?.front_default} alt={pokemonEntry.sprites?.front_default} />\n      </h3>\n      <div className=\"pokemon-content\">\n        <Table className=\"table\">\n          {Object.keys(pokemonEntry).map((key, index) => {\n            // eslint-disable-next-line max-len\n            if (!!pokemonEntry[key] && (categories.includes(key))) {\n              if (Array.isArray(pokemonEntry[key])) {\n                return (\n                  <div className={cx('descriptor', { 'first-row': index === 0 })} key={index}>\n                    <TableCell className=\"key\" id=\"information\" key={key + index}>{key.replace(/-/g, ' ')}</TableCell>\n                    <TableCell className=\"key\" key={key + index}>\n                      {pokemonEntry[key].map((elem, idx) => {\n                        if (elem.move) {\n                          if (idx === pokemonEntry[key].length - 1) {\n                            return <span className=\"key\">{elem.move.name.replace(/-/g, ' ')}</span>\n                          }\n\n                          return (\n                            <span className=\"trait\">\n                              {elem.move.name.replace(/-/g, ' ')}\n                              ,\n                              {' '}\n                            </span>\n                          )\n                        }\n                        if (elem.name) {\n                          if (idx === pokemonEntry[key].length - 1) {\n                            return <span className=\"key\">{elem.name}</span>\n                          }\n\n                          return (\n                            <span className=\"trait\">\n                              {elem.name}\n                              ,\n                              {' '}\n                            </span>\n                          )\n                        }\n                        if (elem.ability) {\n                          if (idx === pokemonEntry[key].length - 1) {\n                            return <span className=\"key\">{elem.ability.name}</span>\n                          }\n\n                          return (\n                            <span className=\"trait\">\n                              {elem.ability.name}\n                              ,\n                              {' '}\n                            </span>\n                          )\n                        }\n                        if (elem.stat) {\n                          if (idx === pokemonEntry[key].length - 1) {\n                            return (\n                              <span className=\"trait\">\n                                {elem.stat.name}\n                                :\n                                {' '}\n                                {elem.base_stat}\n                              </span>\n                            )\n                          }\n\n                          return (\n                            <span className=\"trait\">\n                              {elem.stat.name}\n                              :\n                              {' '}\n                              {elem.base_stat}\n                              <br />\n                            </span>\n                          )\n                        }\n                        if (elem.type) {\n                          if (idx === pokemonEntry[key].length - 1) {\n                            return <span className=\"trait\">{elem.type.name.replace(/-/g, ' ')}</span>\n                          }\n\n                          return (\n                            <span className=\"trait\">\n                              {elem.type.name.replace(/-/g, ' ')}\n                              ,\n                              {' '}\n                            </span>\n                          )\n                        }\n\n                        return null\n                      })}\n                    </TableCell>\n                  </div>\n                )\n              }\n\n              return (\n                <div className={cx('descriptor', { 'first-row': index === 0 })} key={index}>\n                  <TableCell className=\"key\" id=\"information\">{key.replace(/_/g, ' ')}</TableCell>\n                  <TableCell className=\"key\">{pokemonEntry[key].toString()}</TableCell>\n                </div>\n              )\n            }\n\n            return null\n          })}\n        </Table>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonEntry\n","import React, { FunctionComponent, useEffect, useState } from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport axios from 'axios'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Link from '@mui/material/Link'\nimport Generations from './components/Generations'\nimport PokemonEntry from './components/PokemonEntry'\n\nconst rootUrl = 'https://pokeapi.co/api/v2'\n\nconst Pokedex: FunctionComponent = () => {\n  const [genList, setGenList] = useState<any[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<string>('')\n  const [selectedPokemon, setSelectedPokemon] = useState<string>('')\n  const [pokemonEntry, setPokemonEntry] = useState<Record<any, any>>({})\n\n  const params = useParams() as Record<any, any>\n  const location = useLocation()\n  const { state } = location as Record<any, any>\n\n  const getPokemonData = async (name: string) => {\n    try {\n      const results = await axios.get(`${rootUrl}/pokemon/${name}`)\n      return results.data\n    } catch (err) {\n      throw new Error(`Could not retrieve information about ${name}. ${err.message}`)\n    }\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true)\n      error && setError('')\n\n      try {\n        const gensData = await axios.get(`${rootUrl}/generation/?limit=1500`)\n        // eslint-disable-next-line no-restricted-syntax\n        const fetchResults = await Promise.all(gensData.data.results.map(async (data, index: number) => {\n          try {\n            const resultData = await axios.get(data.url)\n            // eslint-disable-next-line camelcase\n            const { pokemon_species, main_region } = resultData.data\n            const sortedData = pokemon_species.sort(\n              (a, b) => a.url.replace(/\\D/g, '').slice(1) - b.url.replace(/\\D/g, '').slice(1),\n            )\n\n            return { region: main_region.name.charAt(0).toUpperCase() + main_region.name.slice(1), pokemonList: sortedData }\n          } catch (err) {\n            throw new Error(`An error occurred fetching the details of generation ${index + 1}`)\n          }\n        }).map((p) => p.catch((e) => {\n          throw e\n        })))\n\n        setGenList(fetchResults)\n      } catch (e) {\n        setError(e.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      setLoading(true)\n\n      try {\n        const pokemonData = await getPokemonData(params.name)\n        setPokemonEntry(pokemonData)\n      } catch (er) {\n        setError(er.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n    if (params.name) {\n      setSelectedPokemon(params.name)\n      fetchPokemonData()\n    }\n  }, [params.name])\n\n  if (loading) {\n    return <div className=\"spinner\" data-testid=\"spinner\" />\n  }\n\n  return (\n    <div className=\"pokeList\">\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" data-testid=\"app-bar\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\">\n              Pokemans\n            </Typography>\n            <Link href=\"/about\" className=\"about-link\" data-testid=\"about\">About</Link>\n            <div className=\"view\">\n              <Generations genList={genList} state={state} selectedPokemon={selectedPokemon} />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {error && <span data-testid=\"error\">{error || 'yo'}</span>}\n      {!Object.keys(pokemonEntry).length ? (\n        <div className=\"home-info\">\n          <p className=\"main-desc\">\n            <strong>Pokemans</strong>\n            {' '}\n            is a basic, general pokedex.\n          </p>\n          <span className=\"sub-desc\">\n            To get started, click the\n            {' '}\n            <i>View Pokemon</i>\n            {' '}\n            button in the nav bar and select a region.\n          </span>\n          <span className=\"sub-desc\">\n            You can also add\n            {' '}\n            <i>/pokemon/yourpokemonname</i>\n            {' '}\n            in the url.\n          </span>\n        </div>\n      ) : (\n        <PokemonEntry pokemonEntry={pokemonEntry} />\n      )}\n    </div>\n  )\n}\n\nexport default Pokedex\n","import React, { FunctionComponent } from 'react'\n\nconst FourOhFour: FunctionComponent = () => (\n  <div className=\"four-oh-four-body\">\n    <div className=\"pikachu-gif\">\n      <img alt=\"pikachu\" data-testid=\"pikachu\" />\n    </div>\n    <p>It looks like you got lost in Diglett&apos;s Tunnel.</p>\n    <div data-testid=\"four-oh-four-body\">\n      <span>\n        Use this free\n        {' '}\n        <a href=\"/\" data-testid=\"home-link\"><strong>Escape Rope</strong></a>\n        {' '}\n        to return to the nearest saved point.\n      </span>\n    </div>\n  </div>\n)\n\nexport default FourOhFour\n","import React, { FunctionComponent } from 'react'\n\nconst About: FunctionComponent = () => (\n  <div className=\"about\">\n    <div className=\"about-body\">\n      <div id=\"backHome\">\n        <ul className=\"linkToPages\">\n          <li>\n            <a href=\"/\" data-testid=\"home-link\">Teleport Home</a>\n          </li>\n        </ul>\n      </div>\n      <div className=\"about-project\" data-testid=\"about-project\">\n        Pokemans is a basic, general pokedex.\n        You can view a Pokemon&apos;s base information by clicking on the menu in the homepage.\n        You can also replace &lsquo;/about&lsquo; with &lsquo;/pokemon/yourpokemonname&lsquo; in the url.\n      </div>\n      <div className=\"icons\" data-testid=\"social-icons\">\n        <a href=\"https://www.linkedin.com/in/thiskeeword\" target=\"_blank\" rel=\"noreferrer\" data-testid=\"media-icon\">\n          <i className=\"fa fa-linkedin fa-lg li grow\" id=\"icon-link\" />\n        </a>\n        <a href=\"https://www.github.com/thisKeeWord\" target=\"_blank\" rel=\"noreferrer\" data-testid=\"media-icon\">\n          <i className=\"fa fa-github-alt fa-lg gh grow\" id=\"icon-link\" />\n        </a>\n        <a href=\"https://www.instagram.com/theonlyleonardk\" target=\"_blank\" rel=\"noreferrer\" data-testid=\"media-icon\">\n          <i className=\"fa fa-instagram fa-lg gh grow\" id=\"icon-link\" />\n        </a>\n        <a href=\"http://www.leonardkee.com\" target=\"_blank\" rel=\"noreferrer\" data-testid=\"media-icon\">\n          <i className=\"fa fa-laptop fa-lg gh grow\" id=\"icon-link\" />\n        </a>\n      </div>\n    </div>\n  </div>\n)\n\nexport default About\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport Pokedex from './Pokedex'\nimport FourOhFour from './pages/FourOhFour'\nimport About from './pages/About'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Pokedex} />\n        <Route path=\"/pokemon/:name\" component={Pokedex} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"*\" component={FourOhFour} />\n      </Switch>\n    </Router>\n  </>,\n  document.getElementById('pokedex'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}